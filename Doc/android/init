# Android init初探
- init 进程是linux启动后运行的第一个进程。
- 程序入口在system/core/init/init.c

## 属性系统
  在init.c的main函数中，首先调用：

```
__system_properties_init (定义在libcutils中)

  //得到环境变量ANDROID_PROPERTY_WORKSPACE，比如：ANDROID_PROPERTY_WORKSPACE=8,49152
  //第一个值是fd,第二个值是size
  getenv("ANDROID_PROPERTY_WORKSPACE");
  //把fd指向的文件，以size大小映射到内存当中。
  mmap(0, sz, PROT_READ, MAP_SHARED, fd, 0);
  //获取的内存地址指针给_system_property_area__
  _system_property_area__ = pa;

```
## ueventd
  ##### ueventd_main函数
```
  //创建 /dev/null字符驱动设备，将标准输入，输出，错误 重定向到/dev/null中，
  //其实也就是关闭init进程的标注输入，输出，错误。
  open_devnull_stdio
```
```
  //创建 /dev/kmsg,也就是打开kernel log
  klog_init
```
```
  //读取proc/cmdline中的内容，复制到hardware[]中
  import_kernel_cmdline(0, import_kernel_nv);
  //读取proc/cpuinfo中的内容，获取hardware和Revision信息
  get_hardware_name(hardware, &revision);
  //解析ueventd.rc，作用：控制目录节点的权限
  ueventd_parse_config_file("/ueventd.rc");
```

  ##### device_init函数
  **uevent_open_socket**

  ```
socket(PF_NETLINK, SOCK_DGRAM, NETLINK_KOBJECT_UEVENT);
bind(s, (struct sockaddr *) &addr, sizeof(addr))
```
创建Netlink socket, 用于内核空间与用户空间之间的通信。
- 第一个参数必须为PF_NETLINK或者AF_NETLINK，二者意思一样。
- 第二个参数表示传输方式，SOCK_DGRAM一般用于多播。
- 第三个参数指定netlink协议类型，NETLINK_KOBJECT_UEVENT 代表内核空间到用户空间的消息。

数据结构sockaddr_nl:
